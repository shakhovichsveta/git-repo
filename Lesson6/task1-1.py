# Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
# Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
# Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов кода для одной и той же задачи.
# Результаты анализа вставьте в виде комментариев к коду. Также укажите в комментариях версию Python и разрядность
# вашей ОС.
# Задание 8 Урок 2:
# Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
# Версия Python - 3.7
# Разрядность ОС - x64

from memory_def import total_size, show_size
n = int(input("Введите количество вводимых чисел: "))
m = int(input("Введите цифру: "))
list_n = []
z = 0
for i in range(1, n + 1):
    a = int(input("Введите число: "))
    list_n.append(a)
print(f'Последовательность чисел {list_n}')
for j in list_n:
    while j > 0:
        if j == m:
            z += 1
        j = j // 10
print(f'Цифра {m} встречается {z} раз')
print(total_size(list_n, verbose=True))
print(show_size(list_n))

# Вывод программы:
# Введите количество вводимых чисел: 4
# Введите цифру: 23
# Введите число: 23
# Введите число: 24
# Введите число: 23
# Введите число: 25
# Последовательность чисел [23, 24, 23, 25]
# Цифра 23 встречается 2 раз
#
# list_n
# Последовательность чисел [23, 24, 23, 25]
# 208 - полный объем памяти списка и его объектов
# 96 <class 'list'> [23, 24, 23, 25] - 96 байт размер списка
# 28 <class 'int'> 23 - 28 байт память, затрачиваемая на каждый объект списка
# 28 <class 'int'> 24
# 28 <class 'int'> 23
# 28 <class 'int'> 25
# type = <class 'list'>, size = 96, object = [23, 24, 23, 25]
# type = <class 'int'>, size = 28, object = 23
# type = <class 'int'>, size = 28, object = 24
# type = <class 'int'>, size = 28, object = 23
# type = <class 'int'>, size = 28, object = 25
